<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<bean id="bookService" class="com.dev118.jexample.spring.bean.impl.BookServiceImpl" init-method="init" />

	<bean id="aspect" class="com.dev118.jexample.spring.aop.HelloWorldAspect" />
	
	<aop:config>
		<!-- 切入点 -->
		<!-- expression属性用于定义切入点模式，模式默认是AspectJ语法 -->
		<!-- "execution(* com.dev118.jexample.spring..*.*(..))" 表示匹配cn.javass包及子包下的任何方法执行 -->
		<aop:pointcut id="pointcut" expression="execution(* com.dev118.jexample.spring..*.*(..))" />
		<!-- 切面 -->
		<!-- 其中ref用来引用切面支持类的方法 -->
		<aop:aspect ref="aspect">
			<!-- 前置通知 -->
			<!-- pointcut-ref属性用于引用切入点Bean -->
			<!-- 而method用来引用切面通知实现类中的方法，该方法就是通知实现，即在目标类方法执行之前调用的方法。 -->
			<aop:before pointcut-ref="pointcut" method="beforeAdvice" />
			<!-- 切入点除了使用pointcut-ref属性来引用已经存在的切入点，也可以使用pointcut属性来定义 -->
			<aop:after pointcut="execution(* com.dev118.jexample.spring..*.*(..))" method="afterFinallyAdvice" />
		</aop:aspect>
	</aop:config>

</beans>
